CHANGE LOG:
12-April-2007: v1.1
Added events and file extension validation
See website for details.

06-June-2007: v1.2
Now works in Opera.

12-June-2007: v1.21
Preserves name of file input so all current server-side
functions don't need to be changed on new installations.

24-June-2007: v1.22
Now works perfectly in Opera, thanks to Adrian Wr√≥bel <adrian [dot] wrobel [at] gmail.com>

10-Jan-2008: v1.24
Fixed bug in event trigger - sending incorrect parameters to event handlers

14-Jan-2008: v1.24
Fixed bug 1251: http://plugins.jquery.com/project/comments/add/1251

25-Jan-2008: v1.24
Implemented feature request: http://plugins.jquery.com/node/1363
The plugin now automatically intercepts ajaxSubmit function (form plugin)
and disbales empty file input elements for submission

08-Feb-2008: v1.25
Fixed bug: http://plugins.jquery.com/node/1495
The last change caused the plugin to disabled input files that shouldn't have been ignored
Now, every newly created input file (by this plugin) is marked by the MultiFile class.

11-Feb-2008: v1.25
Fixed bug: http://plugins.jquery.com/node/1495
Plugin would override element ID everytime.

11-Feb-2008: v1.26
Modified plugin structure. After selecting and removing a file, the plugin would
remove the original element from DOM. Now the plugin works back on its own tracks
and removes the last generated element.
This will resolve compatibility issues with validation plugins and custom code.

12-Feb-2008: v1.26
Try to clear elements using the browser's native behaviour: .reset()
This works around security policies in IE6 and Opera.

17-Mar-2008: v1.27
Added properties/methods for easier form integration
$.MultiFile.autoIntercept - array of known jQuery plugins to intercept (default: 'submit', 'ajaxSubmit', 'validate');
$.MultiFile.intercept - intercepts a jQuery plugin / anonymous function
$.MultiFile.disableEmpty - disable empty inputs (required for some upload scripts)
$.MultiFile.reEnableEmpty - re-enables empty inputs

17-Mar-2008: v 1.28
MAJOR FIX - OPERA BUG
MF.labels was a readyonly property and cause the script to fail.
Renamed to MF.labels. Problem solved!

29-Apr-2008: v 1.28
Added validation to stop duplicate selections
Extracted default configuration to $.MultiFile.options
Improved code organization / performance
Default name is now files[] - square brackets indicate an array is being submitted
Added namePattern options - allows user to configure name of slave elements
	- $name = master name, $id = master id, $g = group count, $i = slave count
	- eg.: $name$i will result in file1, file2, file3 and so on...

20-May-2008: v 1.29
Fixed IE7 bug - onchange event being fired twice on the first element

26-Jun-2008: v 1.29
Replaced variables named 'class' with 'klass' to avoid conflict with reserved keyword
Thanks to Julien Phalip <jphalip@yahoo.fr>